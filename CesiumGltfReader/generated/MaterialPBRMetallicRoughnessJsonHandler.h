// This file was generated by generate-gltf-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include "ArrayJsonHandler.h"
#include "DoubleJsonHandler.h"
#include "ExtensibleObjectJsonHandler.h"
#include "TextureInfoJsonHandler.h"
#include <CesiumGltf/Reader.h>

namespace CesiumGltf {
struct MaterialPBRMetallicRoughness;

class MaterialPBRMetallicRoughnessJsonHandler
    : public ExtensibleObjectJsonHandler {
public:
  MaterialPBRMetallicRoughnessJsonHandler(ReadModelOptions options) noexcept;
  void reset(IJsonHandler* pHandler, MaterialPBRMetallicRoughness* pObject);
  MaterialPBRMetallicRoughness* getObject();
  virtual void reportWarning(
      const std::string& warning,
      std::vector<std::string>&& context = std::vector<std::string>()) override;

  virtual IJsonHandler* Key(const char* str, size_t length, bool copy) override;

protected:
  IJsonHandler* MaterialPBRMetallicRoughnessKey(
      const char* str,
      MaterialPBRMetallicRoughness& o);

private:
  MaterialPBRMetallicRoughness* _pObject = nullptr;
  ArrayJsonHandler<double, DoubleJsonHandler> _baseColorFactor;
  TextureInfoJsonHandler _baseColorTexture;
  DoubleJsonHandler _metallicFactor;
  DoubleJsonHandler _roughnessFactor;
  TextureInfoJsonHandler _metallicRoughnessTexture;
};
} // namespace CesiumGltf
