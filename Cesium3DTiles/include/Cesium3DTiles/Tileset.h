// This file was generated by generate-gltf-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include "Library.h"

#include <optional>
#include <string>
#include <unordered_map>
#include <vector>

#define CODEGEN_API CESIUM3DTILES_API

namespace Cesium3DTiles {

struct CODEGEN_API Extension {
  static inline constexpr const char* TypeName = "Extension";

  struct CODEGEN_API AdditionalProperty {
    static inline constexpr const char* TypeName =
        "Extension::AdditionalProperty";
  };

  std::unordered_map<std::string, Extension::AdditionalProperty>
      additionalProperties;
};

struct CODEGEN_API Extras {
  static inline constexpr const char* TypeName = "Extras";
};

struct CODEGEN_API Asset {
  static inline constexpr const char* TypeName = "Asset";

  std::string version;

  std::optional<std::string> tilesetVersion;

  std::optional<Extension> extensions;

  std::optional<Extras> extras;
};

struct CODEGEN_API BoundingVolume {
  static inline constexpr const char* TypeName = "BoundingVolume";

  std::optional<std::vector<double>> box;

  std::optional<std::vector<double>> region;

  std::optional<std::vector<double>> sphere;

  std::optional<Extension> extensions;

  std::optional<Extras> extras;
};

struct CODEGEN_API Content {
  static inline constexpr const char* TypeName = "Content";

  std::optional<BoundingVolume> boundingVolume;

  std::string uri;

  std::optional<Extension> extensions;

  std::optional<Extras> extras;
};

struct CODEGEN_API Tile {
  static inline constexpr const char* TypeName = "Tile";

  enum class Refine { ADD, REPLACE };

  BoundingVolume boundingVolume;

  std::optional<BoundingVolume> viewerRequestVolume;

  double geometricError;

  std::optional<Tile::Refine> refine;

  std::vector<double> transform =
      {1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1};

  std::optional<Content> content;

  std::optional<std::vector<Tile>> children;

  std::optional<Extension> extensions;

  std::optional<Extras> extras;
};

struct CODEGEN_API TilesetProperties {
  static inline constexpr const char* TypeName = "TilesetProperties";

  double maximum;

  double minimum;

  std::optional<Extension> extensions;

  std::optional<Extras> extras;
};

struct CODEGEN_API Tileset {
  static inline constexpr const char* TypeName = "Tileset";

  struct CODEGEN_API Properties {
    static inline constexpr const char* TypeName = "Tileset::Properties";

    std::unordered_map<std::string, TilesetProperties> additionalProperties;
  };

  Asset asset;

  std::optional<Tileset::Properties> properties;

  double geometricError;

  Tile root;

  std::optional<std::vector<std::string>> extensionsUsed;

  std::optional<std::vector<std::string>> extensionsRequired;

  std::optional<Extension> extensions;

  std::optional<Extras> extras;
};

} // namespace Cesium3DTiles

#undef CODEGEN_API
