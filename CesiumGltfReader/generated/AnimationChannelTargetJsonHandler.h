// This file was generated by generate-gltf-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include "CesiumGltf/AnimationChannelTarget.h"
#include "CesiumGltf/Reader.h"
#include "CesiumJsonReader/IntegerJsonHandler.h"
#include "ExtensibleObjectJsonHandler.h"

namespace CesiumGltf {
struct ReaderContext;
struct AnimationChannelTarget;

class AnimationChannelTargetJsonHandler : public ExtensibleObjectJsonHandler {
public:
  AnimationChannelTargetJsonHandler(const ReaderContext& context) noexcept;
  void reset(IJsonReader* pParentReader, AnimationChannelTarget* pObject);
  AnimationChannelTarget* getObject();
  virtual void reportWarning(
      const std::string& warning,
      std::vector<std::string>&& context = std::vector<std::string>()) override;

  virtual IJsonReader* readObjectKey(const std::string_view& str) override;

protected:
  IJsonReader* readObjectKeyAnimationChannelTarget(
      const std::string& objectType,
      const std::string_view& str,
      AnimationChannelTarget& o);

private:
  class PathJsonHandler : public JsonReader {
  public:
    PathJsonHandler() noexcept : JsonReader() {}
    void reset(IJsonReader* pParent, AnimationChannelTarget::Path* pEnum);
    virtual IJsonReader* readString(const std::string_view& str) override;

  private:
    AnimationChannelTarget::Path* _pEnum = nullptr;
  };

  AnimationChannelTarget* _pObject = nullptr;
  IntegerJsonHandler<int32_t> _node;
  PathJsonHandler _path;
};
} // namespace CesiumGltf
