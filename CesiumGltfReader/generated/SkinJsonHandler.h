// This file was generated by generate-gltf-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include "CesiumGltf/Reader.h"
#include "CesiumJsonReader/ArrayJsonHandler.h"
#include "CesiumJsonReader/IntegerJsonHandler.h"
#include "NamedObjectJsonHandler.h"

namespace CesiumGltf {
struct ReaderContext;
struct Skin;

class SkinJsonHandler : public NamedObjectJsonHandler {
public:
  SkinJsonHandler(const ReaderContext& context) noexcept;
  void reset(IJsonReader* pParentReader, Skin* pObject);
  Skin* getObject();
  virtual void reportWarning(
      const std::string& warning,
      std::vector<std::string>&& context = std::vector<std::string>()) override;

  virtual IJsonReader* readObjectKey(const std::string_view& str) override;

protected:
  IJsonReader* readObjectKeySkin(
      const std::string& objectType,
      const std::string_view& str,
      Skin& o);

private:
  Skin* _pObject = nullptr;
  CesiumJsonReader::IntegerJsonHandler<int32_t> _inverseBindMatrices;
  CesiumJsonReader::IntegerJsonHandler<int32_t> _skeleton;
  CesiumJsonReader::
      ArrayJsonHandler<int32_t, CesiumJsonReader::IntegerJsonHandler<int32_t>>
          _joints;
};
} // namespace CesiumGltf
