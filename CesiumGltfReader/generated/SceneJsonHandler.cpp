// This file was generated by generate-gltf-classes.
// DO NOT EDIT THIS FILE!
#include "SceneJsonHandler.h"
#include "CesiumGltf/Scene.h"

#include <cassert>
#include <string>

using namespace CesiumGltf;

SceneJsonHandler::SceneJsonHandler(const ReaderContext& context) noexcept
    : NamedObjectJsonHandler(context), _nodes() {}

void SceneJsonHandler::reset(IJsonReader* pParentReader, Scene* pObject) {
  NamedObjectJsonHandler::reset(pParentReader, pObject);
  this->_pObject = pObject;
}

Scene* SceneJsonHandler::getObject() { return this->_pObject; }

void SceneJsonHandler::reportWarning(
    const std::string& warning,
    std::vector<std::string>&& context) {
  if (this->getCurrentKey()) {
    context.emplace_back(std::string(".") + this->getCurrentKey());
  }
  this->parent()->reportWarning(warning, std::move(context));
}

IJsonReader* SceneJsonHandler::readObjectKey(const std::string_view& str) {
  assert(this->_pObject);
  return this->readObjectKeyScene(Scene::TypeName, str, *this->_pObject);
}

IJsonReader* SceneJsonHandler::readObjectKeyScene(
    const std::string& objectType,
    const std::string_view& str,
    Scene& o) {
  using namespace std::string_literals;

  if ("nodes"s == str)
    return property("nodes", this->_nodes, o.nodes);

  return this->readObjectKeyNamedObject(objectType, str, *this->_pObject);
}
