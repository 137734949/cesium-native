// This file was generated by generate-gltf-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include "ArrayJsonHandler.h"
#include "CesiumGltf/MeshPrimitive.h"
#include "DictionaryJsonHandler.h"
#include "ExtensibleObjectJsonHandler.h"
#include "IntegerJsonHandler.h"
#include "KHR_draco_mesh_compressionJsonHandler.h"

namespace CesiumGltf {
  struct MeshPrimitive;

  class MeshPrimitiveJsonHandler : public ExtensibleObjectJsonHandler {
  public:
    void reset(IJsonHandler* pHandler, MeshPrimitive* pObject);
    MeshPrimitive* getObject();
    virtual void reportWarning(const std::string& warning, std::vector<std::string>&& context = std::vector<std::string>()) override;

    virtual IJsonHandler* Key(const char* str, size_t length, bool copy) override;

  protected:
    IJsonHandler* MeshPrimitiveKey(const char* str, MeshPrimitive& o);

  private:
    class ExtensionsJsonHandler : public ObjectJsonHandler {
    public:
      void reset(IJsonHandler* pParent, std::vector<std::any>* pExtensions);
      virtual IJsonHandler* Key(const char* str, size_t length, bool copy) override;

    private:
      std::vector<std::any>* _pExtensions = nullptr;
      KHR_draco_mesh_compressionJsonHandler _KHR_draco_mesh_compression;
    };

    MeshPrimitive* _pObject;
    DictionaryJsonHandler<int32_t, IntegerJsonHandler<int32_t>> _attributes;
    IntegerJsonHandler<int32_t> _indices;
    IntegerJsonHandler<int32_t> _material;
    IntegerJsonHandler<MeshPrimitive::Mode> _mode;
    ArrayJsonHandler<std::unordered_map<std::string, int32_t>, DictionaryJsonHandler<int32_t, IntegerJsonHandler<int32_t>>> _targets;
    ExtensionsJsonHandler _extensions;
  };
}
