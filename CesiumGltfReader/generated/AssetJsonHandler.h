// This file was generated by generate-gltf-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include "CesiumGltf/Reader.h"
#include "CesiumJsonReader/StringJsonHandler.h"
#include "ExtensibleObjectJsonHandler.h"

namespace CesiumGltf {
struct ReaderContext;
struct Asset;

class AssetJsonHandler : public ExtensibleObjectJsonHandler {
public:
  AssetJsonHandler(const ReaderContext& context) noexcept;
  void reset(IJsonReader* pParentReader, Asset* pObject);
  Asset* getObject();
  virtual void reportWarning(
      const std::string& warning,
      std::vector<std::string>&& context = std::vector<std::string>()) override;

  virtual IJsonReader* readObjectKey(const std::string_view& str) override;

protected:
  IJsonReader* readObjectKeyAsset(
      const std::string& objectType,
      const std::string_view& str,
      Asset& o);

private:
  Asset* _pObject = nullptr;
  CesiumJsonReader::StringJsonHandler _copyright;
  CesiumJsonReader::StringJsonHandler _generator;
  CesiumJsonReader::StringJsonHandler _version;
  CesiumJsonReader::StringJsonHandler _minVersion;
};
} // namespace CesiumGltf
