// This file was generated by generate-gltf-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include "TextureAccessorJsonHandler.h"

#include <CesiumGltf/FeatureTexture.h>
#include <CesiumJsonReader/DictionaryJsonHandler.h>
#include <CesiumJsonReader/ExtensibleObjectJsonHandler.h>
#include <CesiumJsonReader/StringJsonHandler.h>

namespace CesiumGltf {
class ExtensionReaderContext;

class FeatureTextureJsonHandler
    : public CesiumJsonReader::ExtensibleObjectJsonHandler {
public:
  using ValueType = FeatureTexture;

  FeatureTextureJsonHandler(
      const CesiumJsonReader::ExtensionReaderContext& context) noexcept;
  void reset(IJsonHandler* pParentHandler, FeatureTexture* pObject);

  virtual IJsonHandler* readObjectKey(const std::string_view& str) override;

protected:
  IJsonHandler* readObjectKeyFeatureTexture(
      const std::string& objectType,
      const std::string_view& str,
      FeatureTexture& o);

private:
  FeatureTexture* _pObject = nullptr;
  CesiumJsonReader::StringJsonHandler _classProperty;
  CesiumJsonReader::
      DictionaryJsonHandler<TextureAccessor, TextureAccessorJsonHandler>
          _properties;
};
} // namespace CesiumGltf
