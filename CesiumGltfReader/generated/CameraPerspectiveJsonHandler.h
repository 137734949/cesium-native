// This file was generated by generate-gltf-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include "DoubleJsonHandler.h"
#include "ExtensibleObjectJsonHandler.h"
#include <CesiumGltf/Reader.h>

namespace CesiumGltf {
struct CameraPerspective;

class CameraPerspectiveJsonHandler : public ExtensibleObjectJsonHandler {
public:
  CameraPerspectiveJsonHandler(const ReadModelOptions& options) noexcept;
  void reset(IJsonHandler* pHandler, CameraPerspective* pObject);
  CameraPerspective* getObject();
  virtual void reportWarning(
      const std::string& warning,
      std::vector<std::string>&& context = std::vector<std::string>()) override;

  virtual IJsonHandler* Key(const char* str, size_t length, bool copy) override;

protected:
  IJsonHandler* CameraPerspectiveKey(
      const std::string& objectType,
      const char* str,
      CameraPerspective& o);

private:
  CameraPerspective* _pObject = nullptr;
  DoubleJsonHandler _aspectRatio;
  DoubleJsonHandler _yfov;
  DoubleJsonHandler _zfar;
  DoubleJsonHandler _znear;
};
} // namespace CesiumGltf
