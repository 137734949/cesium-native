// This file was generated by generate-gltf-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include "CesiumGltf/Reader.h"
#include "CesiumGltf/Sampler.h"
#include "CesiumJsonReader/IntegerJsonHandler.h"
#include "NamedObjectJsonHandler.h"

namespace CesiumGltf {
struct ReaderContext;
struct Sampler;

class SamplerJsonHandler : public NamedObjectJsonHandler {
public:
  SamplerJsonHandler(const ReaderContext& context) noexcept;
  void reset(IJsonHandler* pParentHandler, Sampler* pObject);
  Sampler* getObject();
  virtual void reportWarning(
      const std::string& warning,
      std::vector<std::string>&& context = std::vector<std::string>()) override;

  virtual IJsonHandler* readObjectKey(const std::string_view& str) override;

protected:
  IJsonHandler* readObjectKeySampler(
      const std::string& objectType,
      const std::string_view& str,
      Sampler& o);

private:
  Sampler* _pObject = nullptr;
  CesiumJsonReader::IntegerJsonHandler<Sampler::MagFilter> _magFilter;
  CesiumJsonReader::IntegerJsonHandler<Sampler::MinFilter> _minFilter;
  CesiumJsonReader::IntegerJsonHandler<Sampler::WrapS> _wrapS;
  CesiumJsonReader::IntegerJsonHandler<Sampler::WrapT> _wrapT;
};
} // namespace CesiumGltf
