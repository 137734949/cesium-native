// This file was generated by generate-gltf-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include "CesiumGltf/AccessorSparseIndices.h"
#include "CesiumGltf/Reader.h"
#include "CesiumJsonReader/IntegerJsonHandler.h"
#include "ExtensibleObjectJsonHandler.h"

namespace CesiumGltf {
struct ReaderContext;
struct AccessorSparseIndices;

class AccessorSparseIndicesJsonHandler : public ExtensibleObjectJsonHandler {
public:
  using ValueType = AccessorSparseIndices;

  AccessorSparseIndicesJsonHandler(const ReaderContext& context) noexcept;
  void reset(IJsonHandler* pParentHandler, AccessorSparseIndices* pObject);

  virtual IJsonHandler* readObjectKey(const std::string_view& str) override;

protected:
  IJsonHandler* readObjectKeyAccessorSparseIndices(
      const std::string& objectType,
      const std::string_view& str,
      AccessorSparseIndices& o);

private:
  AccessorSparseIndices* _pObject = nullptr;
  CesiumJsonReader::IntegerJsonHandler<int32_t> _bufferView;
  CesiumJsonReader::IntegerJsonHandler<int64_t> _byteOffset;
  CesiumJsonReader::IntegerJsonHandler<AccessorSparseIndices::ComponentType>
      _componentType;
};
} // namespace CesiumGltf
