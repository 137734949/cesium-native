// This file was generated by generate-gltf-classes.
// DO NOT EDIT THIS FILE!
#include "FeatureIDAttributeJsonHandler.h"
#include "CesiumGltf/FeatureIDAttribute.h"

#include <cassert>
#include <string>

using namespace CesiumGltf;

FeatureIDAttributeJsonHandler::FeatureIDAttributeJsonHandler(
    const ReaderContext& context) noexcept
    : ExtensibleObjectJsonHandler(context),
      _attribute(),
      _constant(),
      _divisor() {}

void FeatureIDAttributeJsonHandler::reset(
    CesiumJsonReader::IJsonHandler* pParentHandler,
    FeatureIDAttribute* pObject) {
  ExtensibleObjectJsonHandler::reset(pParentHandler, pObject);
  this->_pObject = pObject;
}

CesiumJsonReader::IJsonHandler*
FeatureIDAttributeJsonHandler::readObjectKey(const std::string_view& str) {
  assert(this->_pObject);
  return this->readObjectKeyFeatureIDAttribute(
      FeatureIDAttribute::TypeName,
      str,
      *this->_pObject);
}

CesiumJsonReader::IJsonHandler*
FeatureIDAttributeJsonHandler::readObjectKeyFeatureIDAttribute(
    const std::string& objectType,
    const std::string_view& str,
    FeatureIDAttribute& o) {
  using namespace std::string_literals;

  if ("attribute"s == str)
    return property("attribute", this->_attribute, o.attribute);
  if ("constant"s == str)
    return property("constant", this->_constant, o.constant);
  if ("divisor"s == str)
    return property("divisor", this->_divisor, o.divisor);

  return this->readObjectKeyExtensibleObject(objectType, str, *this->_pObject);
}
