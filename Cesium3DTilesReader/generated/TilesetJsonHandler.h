// This file was generated by generate-gltf-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include "AssetJsonHandler.h"
#include "Cesium3DTiles/ReaderContext.h"
#include "Cesium3DTiles/Tileset.h"
#include "CesiumJsonReader/ArrayJsonHandler.h"
#include "CesiumJsonReader/DictionaryJsonHandler.h"
#include "CesiumJsonReader/DoubleJsonHandler.h"
#include "CesiumJsonReader/StringJsonHandler.h"
#include "ExtensibleObjectJsonHandler.h"
#include "PropertiesJsonHandler.h"
#include "TileJsonHandler.h"

namespace Cesium3DTiles {
struct ReaderContext;

class TilesetJsonHandler : public ExtensibleObjectJsonHandler {
public:
  using ValueType = Tileset;

  TilesetJsonHandler(const ReaderContext& context) noexcept;
  void reset(IJsonHandler* pParentHandler, Tileset* pObject);

  virtual IJsonHandler* readObjectKey(const std::string_view& str) override;

protected:
  IJsonHandler* readObjectKeyTileset(
      const std::string& objectType,
      const std::string_view& str,
      Tileset& o);

private:
  Tileset* _pObject = nullptr;
  AssetJsonHandler _asset;
  CesiumJsonReader::DictionaryJsonHandler<Properties, PropertiesJsonHandler>
      _properties;
  CesiumJsonReader::DoubleJsonHandler _geometricError;
  TileJsonHandler _root;
  CesiumJsonReader::
      ArrayJsonHandler<std::string, CesiumJsonReader::StringJsonHandler>
          _extensionsUsed;
  CesiumJsonReader::
      ArrayJsonHandler<std::string, CesiumJsonReader::StringJsonHandler>
          _extensionsRequired;
};
} // namespace Cesium3DTiles
