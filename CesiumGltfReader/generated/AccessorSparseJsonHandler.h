// This file was generated by generate-gltf-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include "AccessorSparseIndicesJsonHandler.h"
#include "AccessorSparseValuesJsonHandler.h"
#include "CesiumGltf/Reader.h"
#include "CesiumJsonReader/IntegerJsonHandler.h"
#include "ExtensibleObjectJsonHandler.h"

namespace CesiumGltf {
struct ReaderContext;
struct AccessorSparse;

class AccessorSparseJsonHandler : public ExtensibleObjectJsonHandler {
public:
  AccessorSparseJsonHandler(const ReaderContext& context) noexcept;
  void reset(IJsonReader* pParentReader, AccessorSparse* pObject);
  AccessorSparse* getObject();
  virtual void reportWarning(
      const std::string& warning,
      std::vector<std::string>&& context = std::vector<std::string>()) override;

  virtual IJsonReader* readObjectKey(const std::string_view& str) override;

protected:
  IJsonReader* readObjectKeyAccessorSparse(
      const std::string& objectType,
      const std::string_view& str,
      AccessorSparse& o);

private:
  AccessorSparse* _pObject = nullptr;
  IntegerJsonHandler<int64_t> _count;
  AccessorSparseIndicesJsonHandler _indices;
  AccessorSparseValuesJsonHandler _values;
};
} // namespace CesiumGltf
