// This file was generated by generate-gltf-classes.
// DO NOT EDIT THIS FILE!
#include "AnimationJsonHandler.h"
#include "CesiumGltf/Animation.h"
#include <cassert>
#include <string>

using namespace CesiumGltf;

void AnimationJsonHandler::reset(IJsonHandler* pParent, Animation* pObject) {
  NamedObjectJsonHandler::reset(pParent, pObject);
  this->_pObject = pObject;
}

Animation* AnimationJsonHandler::getObject() {
  return this->_pObject;
}

void AnimationJsonHandler::reportWarning(const std::string& warning, std::vector<std::string>&& context) {
  if (this->getCurrentKey()) {
    context.emplace_back(std::string(".") + this->getCurrentKey());
  }
  this->parent()->reportWarning(warning, std::move(context));
}

IJsonHandler* AnimationJsonHandler::Key(const char* str, size_t /*length*/, bool /*copy*/) {
  assert(this->_pObject);
  return this->AnimationKey(str, *this->_pObject);
}

IJsonHandler* AnimationJsonHandler::AnimationKey(const char* str, Animation& o) {
  using namespace std::string_literals;

  if ("channels"s == str) return property("channels", this->_channels, o.channels);
  if ("samplers"s == str) return property("samplers", this->_samplers, o.samplers);

  return this->NamedObjectKey(str, *this->_pObject);
}
