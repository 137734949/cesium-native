// This file was generated by generate-gltf-classes.
// DO NOT EDIT THIS FILE!
#include "SamplerJsonHandler.h"
#include "CesiumGltf/Sampler.h"
#include <cassert>
#include <string>

using namespace CesiumGltf;

void SamplerJsonHandler::reset(IJsonHandler* pParent, Sampler* pObject) {
  NamedObjectJsonHandler::reset(pParent);
  this->_pObject = pObject;
}

Sampler* SamplerJsonHandler::getObject() {
  return this->_pObject;
}

void SamplerJsonHandler::reportWarning(const std::string& warning, std::vector<std::string>&& context) {
  if (this->getCurrentKey()) {
    context.emplace_back(std::string(".") + this->getCurrentKey());
  }
  this->parent()->reportWarning(warning, std::move(context));
}

IJsonHandler* SamplerJsonHandler::Key(const char* str, size_t /*length*/, bool /*copy*/) {
  using namespace std::string_literals;

  assert(this->_pObject);

  if ("magFilter"s == str) return property("magFilter", this->_magFilter, this->_pObject->magFilter);
  if ("minFilter"s == str) return property("minFilter", this->_minFilter, this->_pObject->minFilter);
  if ("wrapS"s == str) return property("wrapS", this->_wrapS, this->_pObject->wrapS);
  if ("wrapT"s == str) return property("wrapT", this->_wrapT, this->_pObject->wrapT);

  return this->NamedObjectKey(str, *this->_pObject);
}
