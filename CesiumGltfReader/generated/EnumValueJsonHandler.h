// This file was generated by generate-gltf-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include "CesiumGltf/EnumValue.h"
#include "CesiumJsonReader/IntegerJsonHandler.h"
#include "CesiumJsonReader/StringJsonHandler.h"

#include <CesiumJsonReader/ExtensibleObjectJsonHandler.h>

namespace CesiumGltf {
class ExtensionReaderContext;

class EnumValueJsonHandler
    : public CesiumJsonReader::ExtensibleObjectJsonHandler {
public:
  using ValueType = EnumValue;

  EnumValueJsonHandler(
      const CesiumJsonReader::ExtensionReaderContext& context) noexcept;
  void reset(IJsonHandler* pParentHandler, EnumValue* pObject);

  virtual IJsonHandler* readObjectKey(const std::string_view& str) override;

protected:
  IJsonHandler* readObjectKeyEnumValue(
      const std::string& objectType,
      const std::string_view& str,
      EnumValue& o);

private:
  EnumValue* _pObject = nullptr;
  CesiumJsonReader::StringJsonHandler _name;
  CesiumJsonReader::StringJsonHandler _description;
  CesiumJsonReader::IntegerJsonHandler<int64_t> _value;
};
} // namespace CesiumGltf
