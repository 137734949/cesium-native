// This file was generated by generate-gltf-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include "CesiumGltf/ReaderContext.h"
#include "CesiumJsonReader/ArrayJsonHandler.h"
#include "CesiumJsonReader/BoolJsonHandler.h"
#include "CesiumJsonReader/DoubleJsonHandler.h"
#include "CesiumJsonReader/IntegerJsonHandler.h"
#include "CesiumJsonReader/JsonObjectJsonHandler.h"
#include "CesiumJsonReader/StringJsonHandler.h"
#include "ExtensibleObjectJsonHandler.h"
#include "VariantJsonHandler.h"

namespace CesiumGltf {
struct ReaderContext;
struct ClassProperty;

class ClassPropertyJsonHandler : public ExtensibleObjectJsonHandler {
public:
  using ValueType = ClassProperty;

  ClassPropertyJsonHandler(const ReaderContext& context) noexcept;
  void reset(IJsonHandler* pParentHandler, ClassProperty* pObject);

  virtual IJsonHandler* readObjectKey(const std::string_view& str) override;

protected:
  IJsonHandler* readObjectKeyClassProperty(
      const std::string& objectType,
      const std::string_view& str,
      ClassProperty& o);

private:
  ClassProperty* _pObject = nullptr;
  CesiumJsonReader::StringJsonHandler _name;
  CesiumJsonReader::StringJsonHandler _description;
  CesiumJsonReader::StringJsonHandler _type;
  CesiumJsonReader::StringJsonHandler _enumType;
  JsonObjectJsonHandler _componentType;
  CesiumJsonReader::IntegerJsonHandler<int64_t> _componentCount;
  CesiumJsonReader::BoolJsonHandler _normalized;
  VariantJsonHandler<
      CesiumJsonReader::DoubleJsonHandler,
      CesiumJsonReader::
          ArrayJsonHandler<double, CesiumJsonReader::DoubleJsonHandler>>
      _max;
  VariantJsonHandler<
      CesiumJsonReader::DoubleJsonHandler,
      CesiumJsonReader::
          ArrayJsonHandler<double, CesiumJsonReader::DoubleJsonHandler>>
      _min;
  VariantJsonHandler<
      CesiumJsonReader::BoolJsonHandler,
      CesiumJsonReader::DoubleJsonHandler,
      CesiumJsonReader::StringJsonHandler,
      CesiumJsonReader::
          ArrayJsonHandler<CesiumUtility::JsonValue, JsonObjectJsonHandler>>
      _defaultProperty;
  CesiumJsonReader::BoolJsonHandler _optional;
  CesiumJsonReader::StringJsonHandler _semantic;
};
} // namespace CesiumGltf
