// This file was generated by generate-gltf-classes.
// DO NOT EDIT THIS FILE!
#include "AssetJsonHandler.h"
#include "CesiumGltf/Asset.h"
#include <cassert>
#include <string>

using namespace CesiumGltf;

void AssetJsonHandler::reset(IJsonHandler* pParent, Asset* pObject) {
  ExtensibleObjectJsonHandler::reset(pParent);
  this->_pObject = pObject;
}

Asset* AssetJsonHandler::getObject() {
  return this->_pObject;
}

void AssetJsonHandler::reportWarning(const std::string& warning, std::vector<std::string>&& context) {
  if (this->getCurrentKey()) {
    context.emplace_back(std::string(".") + this->getCurrentKey());
  }
  this->parent()->reportWarning(warning, std::move(context));
}

IJsonHandler* AssetJsonHandler::Key(const char* str, size_t /*length*/, bool /*copy*/) {
  using namespace std::string_literals;

  assert(this->_pObject);

  if ("copyright"s == str) return property("copyright", this->_copyright, this->_pObject->copyright);
  if ("generator"s == str) return property("generator", this->_generator, this->_pObject->generator);
  if ("version"s == str) return property("version", this->_version, this->_pObject->version);
  if ("minVersion"s == str) return property("minVersion", this->_minVersion, this->_pObject->minVersion);

  return this->ExtensibleObjectKey(str, *this->_pObject);
}
