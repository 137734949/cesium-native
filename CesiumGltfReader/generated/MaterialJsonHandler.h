// This file was generated by generate-gltf-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include "ArrayJsonHandler.h"
#include "BoolJsonHandler.h"
#include "CesiumGltf/Material.h"
#include "DoubleJsonHandler.h"
#include "MaterialNormalTextureInfoJsonHandler.h"
#include "MaterialOcclusionTextureInfoJsonHandler.h"
#include "MaterialPBRMetallicRoughnessJsonHandler.h"
#include "NamedObjectJsonHandler.h"
#include "TextureInfoJsonHandler.h"
#include <CesiumGltf/Reader.h>

namespace CesiumGltf {
struct Material;

class MaterialJsonHandler : public NamedObjectJsonHandler {
public:
  MaterialJsonHandler(const ReaderContext& context) noexcept;
  void reset(IJsonReader* pHandler, Material* pObject);
  Material* getObject();
  virtual void reportWarning(
      const std::string& warning,
      std::vector<std::string>&& context = std::vector<std::string>()) override;

  virtual IJsonReader* readObjectKey(const std::string_view& str) override;

protected:
  IJsonReader* readObjectKeyMaterial(
      const std::string& objectType,
      const std::string_view& str,
      Material& o);

private:
  class AlphaModeJsonHandler : public JsonReader {
  public:
    AlphaModeJsonHandler(const ReaderContext& context) noexcept
        : JsonReader(context) {}
    void reset(IJsonReader* pParent, Material::AlphaMode* pEnum);
    virtual IJsonReader* readString(const std::string_view& str) override;

  private:
    Material::AlphaMode* _pEnum = nullptr;
  };

  Material* _pObject = nullptr;
  MaterialPBRMetallicRoughnessJsonHandler _pbrMetallicRoughness;
  MaterialNormalTextureInfoJsonHandler _normalTexture;
  MaterialOcclusionTextureInfoJsonHandler _occlusionTexture;
  TextureInfoJsonHandler _emissiveTexture;
  ArrayJsonHandler<double, DoubleJsonHandler> _emissiveFactor;
  AlphaModeJsonHandler _alphaMode;
  DoubleJsonHandler _alphaCutoff;
  BoolJsonHandler _doubleSided;
};
} // namespace CesiumGltf
