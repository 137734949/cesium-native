// This file was generated by generate-gltf-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include "CesiumGltf/ReaderContext.h"
#include "EnumValueJsonHandler.h"
#include "ExtensibleObjectJsonHandler.h"

#include <CesiumGltf/Enum.h>
#include <CesiumJsonReader/ArrayJsonHandler.h>
#include <CesiumJsonReader/StringJsonHandler.h>

namespace CesiumGltf {
struct ReaderContext;

class EnumJsonHandler : public ExtensibleObjectJsonHandler {
public:
  using ValueType = Enum;

  EnumJsonHandler(const ReaderContext& context) noexcept;
  void reset(IJsonHandler* pParentHandler, Enum* pObject);

  virtual IJsonHandler* readObjectKey(const std::string_view& str) override;

protected:
  IJsonHandler* readObjectKeyEnum(
      const std::string& objectType,
      const std::string_view& str,
      Enum& o);

private:
  Enum* _pObject = nullptr;
  CesiumJsonReader::StringJsonHandler _name;
  CesiumJsonReader::StringJsonHandler _description;
  CesiumJsonReader::StringJsonHandler _valueType;
  CesiumJsonReader::ArrayJsonHandler<EnumValue, EnumValueJsonHandler> _values;
};
} // namespace CesiumGltf
