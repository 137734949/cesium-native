// This file was generated by generate-gltf-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include <Cesium3DTiles/Cesium3DTiles.h>
#include <CesiumJsonWriter/ExtensionWriterContext.h>
#include <CesiumJsonWriter/JsonWriter.h>

namespace Cesium3DTiles {

struct AssetWriter {
  using ValueType = Asset;

  static void write(
      const Asset& obj,
      CesiumJsonWriter::JsonWriter& jsonWriter,
      const CesiumJsonWriter::ExtensionWriterContext& context);
};
struct BoundingVolumeWriter {
  using ValueType = BoundingVolume;

  static void write(
      const BoundingVolume& obj,
      CesiumJsonWriter::JsonWriter& jsonWriter,
      const CesiumJsonWriter::ExtensionWriterContext& context);
};
struct TileContentWriter {
  using ValueType = TileContent;

  static void write(
      const TileContent& obj,
      CesiumJsonWriter::JsonWriter& jsonWriter,
      const CesiumJsonWriter::ExtensionWriterContext& context);
};
struct TileWriter {
  using ValueType = Tile;

  struct RefineWriter {
    static void write(
        const Tile::Refine& obj,
        CesiumJsonWriter::JsonWriter& jsonWriter,
        const CesiumJsonWriter::ExtensionWriterContext& context);
  };

  static void write(
      const Tile& obj,
      CesiumJsonWriter::JsonWriter& jsonWriter,
      const CesiumJsonWriter::ExtensionWriterContext& context);
};
struct TilesetPropertiesWriter {
  using ValueType = TilesetProperties;

  static void write(
      const TilesetProperties& obj,
      CesiumJsonWriter::JsonWriter& jsonWriter,
      const CesiumJsonWriter::ExtensionWriterContext& context);
};
struct TilesetWriter {
  using ValueType = Tileset;

  struct PropertiesWriter {
    using ValueType = Tileset::Properties;

    static void write(
        const Tileset::Properties& obj,
        CesiumJsonWriter::JsonWriter& jsonWriter,
        const CesiumJsonWriter::ExtensionWriterContext& context);
  };

  static void write(
      const Tileset& obj,
      CesiumJsonWriter::JsonWriter& jsonWriter,
      const CesiumJsonWriter::ExtensionWriterContext& context);
};
struct FeatureTableWriter {
  using ValueType = FeatureTable;

  struct BinaryBodyReferenceWriter {
    using ValueType = FeatureTable::BinaryBodyReference;

    struct ComponentTypeWriter {
      static void write(
          const FeatureTable::BinaryBodyReference::ComponentType& obj,
          CesiumJsonWriter::JsonWriter& jsonWriter,
          const CesiumJsonWriter::ExtensionWriterContext& context);
    };

    static void write(
        const FeatureTable::BinaryBodyReference& obj,
        CesiumJsonWriter::JsonWriter& jsonWriter,
        const CesiumJsonWriter::ExtensionWriterContext& context);
  };

  struct PropertyWriter {
    using ValueType = std::
        variant<FeatureTable::BinaryBodyReference, std::vector<double>, double>;

    static void write(
        const std::variant<
            FeatureTable::BinaryBodyReference,
            std::vector<double>,
            double>& obj,
        CesiumJsonWriter::JsonWriter& jsonWriter,
        const CesiumJsonWriter::ExtensionWriterContext& context);
  };
  struct GlobalPropertyIntegerWriter {
    using ValueType =
        std::variant<FeatureTable::GlobalPropertyInteger::Variant0, int64_t>;

    struct Variant0Writer {
      using ValueType = FeatureTable::GlobalPropertyInteger::Variant0;

      static void write(
          const FeatureTable::GlobalPropertyInteger::Variant0& obj,
          CesiumJsonWriter::JsonWriter& jsonWriter,
          const CesiumJsonWriter::ExtensionWriterContext& context);
    };

    static void write(
        const std::variant<
            FeatureTable::GlobalPropertyInteger::Variant0,
            int64_t>& obj,
        CesiumJsonWriter::JsonWriter& jsonWriter,
        const CesiumJsonWriter::ExtensionWriterContext& context);
  };
  struct GlobalPropertyNumberWriter {
    using ValueType =
        std::variant<FeatureTable::GlobalPropertyNumber::Variant0, double>;

    struct Variant0Writer {
      using ValueType = FeatureTable::GlobalPropertyNumber::Variant0;

      static void write(
          const FeatureTable::GlobalPropertyNumber::Variant0& obj,
          CesiumJsonWriter::JsonWriter& jsonWriter,
          const CesiumJsonWriter::ExtensionWriterContext& context);
    };

    static void write(
        const std::
            variant<FeatureTable::GlobalPropertyNumber::Variant0, double>& obj,
        CesiumJsonWriter::JsonWriter& jsonWriter,
        const CesiumJsonWriter::ExtensionWriterContext& context);
  };
  struct GlobalPropertyCartesian3Writer {
    using ValueType = std::variant<
        FeatureTable::GlobalPropertyCartesian3::Variant0,
        std::vector<double>>;

    struct Variant0Writer {
      using ValueType = FeatureTable::GlobalPropertyCartesian3::Variant0;

      static void write(
          const FeatureTable::GlobalPropertyCartesian3::Variant0& obj,
          CesiumJsonWriter::JsonWriter& jsonWriter,
          const CesiumJsonWriter::ExtensionWriterContext& context);
    };

    static void write(
        const std::variant<
            FeatureTable::GlobalPropertyCartesian3::Variant0,
            std::vector<double>>& obj,
        CesiumJsonWriter::JsonWriter& jsonWriter,
        const CesiumJsonWriter::ExtensionWriterContext& context);
  };
  struct GlobalPropertyCartesian4Writer {
    using ValueType = std::variant<
        FeatureTable::GlobalPropertyCartesian4::Variant0,
        std::vector<double>>;

    struct Variant0Writer {
      using ValueType = FeatureTable::GlobalPropertyCartesian4::Variant0;

      static void write(
          const FeatureTable::GlobalPropertyCartesian4::Variant0& obj,
          CesiumJsonWriter::JsonWriter& jsonWriter,
          const CesiumJsonWriter::ExtensionWriterContext& context);
    };

    static void write(
        const std::variant<
            FeatureTable::GlobalPropertyCartesian4::Variant0,
            std::vector<double>>& obj,
        CesiumJsonWriter::JsonWriter& jsonWriter,
        const CesiumJsonWriter::ExtensionWriterContext& context);
  };

  static void write(
      const FeatureTable& obj,
      CesiumJsonWriter::JsonWriter& jsonWriter,
      const CesiumJsonWriter::ExtensionWriterContext& context);
};
struct PntsFeatureTableWriter {
  using ValueType = PntsFeatureTable;

  static void write(
      const PntsFeatureTable& obj,
      CesiumJsonWriter::JsonWriter& jsonWriter,
      const CesiumJsonWriter::ExtensionWriterContext& context);
};

} // namespace Cesium3DTiles
