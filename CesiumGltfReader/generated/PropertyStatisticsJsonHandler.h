// This file was generated by generate-gltf-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include "CesiumGltf/PropertyStatistics.h"
#include "CesiumGltf/ReaderContext.h"
#include "CesiumJsonReader/DictionaryJsonHandler.h"
#include "CesiumJsonReader/JsonObjectJsonHandler.h"
#include "ExtensibleObjectJsonHandler.h"

namespace CesiumGltf {
struct ReaderContext;

class PropertyStatisticsJsonHandler : public ExtensibleObjectJsonHandler {
public:
  using ValueType = PropertyStatistics;

  PropertyStatisticsJsonHandler(const ReaderContext& context) noexcept;
  void reset(IJsonHandler* pParentHandler, PropertyStatistics* pObject);

  virtual IJsonHandler* readObjectKey(const std::string_view& str) override;

protected:
  IJsonHandler* readObjectKeyPropertyStatistics(
      const std::string& objectType,
      const std::string_view& str,
      PropertyStatistics& o);

private:
  PropertyStatistics* _pObject = nullptr;
  CesiumJsonReader::JsonObjectJsonHandler _min;
  CesiumJsonReader::JsonObjectJsonHandler _max;
  CesiumJsonReader::JsonObjectJsonHandler _mean;
  CesiumJsonReader::JsonObjectJsonHandler _median;
  CesiumJsonReader::JsonObjectJsonHandler _standardDeviation;
  CesiumJsonReader::JsonObjectJsonHandler _variance;
  CesiumJsonReader::JsonObjectJsonHandler _sum;
  CesiumJsonReader::DictionaryJsonHandler<
      CesiumUtility::JsonValue,
      CesiumJsonReader::JsonObjectJsonHandler>
      _occurrences;
};
} // namespace CesiumGltf
