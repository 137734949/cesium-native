// This file was generated by generate-gltf-classes.
// DO NOT EDIT THIS FILE!
#include "CameraJsonHandler.h"
#include "CesiumGltf/Camera.h"
#include <cassert>
#include <string>

using namespace CesiumGltf;

void CameraJsonHandler::reset(JsonHandler* pParent, Camera* pObject) {
  NamedObjectJsonHandler::reset(pParent);
  this->_pObject = pObject;
}

JsonHandler* CameraJsonHandler::Key(const char* str, size_t /*length*/, bool /*copy*/) {
  using namespace std::string_literals;

  assert(this->_pObject);

  if ("orthographic"s == str) return property(this->_orthographic, this->_pObject->orthographic);
  if ("perspective"s == str) return property(this->_perspective, this->_pObject->perspective);
  if ("type"s == str) return property(this->_type, this->_pObject->type);

  return this->NamedObjectKey(str, *this->_pObject);
}

void CameraJsonHandler::TypeJsonHandler::reset(JsonHandler* pParent, Camera::Type* pEnum) {
  JsonHandler::reset(pParent);
  this->_pEnum = pEnum;
}

JsonHandler* CameraJsonHandler::TypeJsonHandler::String(const char* str, size_t /*length*/, bool /*copy*/) {
  using namespace std::string_literals;

  assert(this->_pEnum);

  if ("perspective"s == str) *this->_pEnum = Camera::Type::perspective;
  else if ("orthographic"s == str) *this->_pEnum = Camera::Type::orthographic;
  else return nullptr;

  return this->parent();
}
