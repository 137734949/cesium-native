// This file was generated by generate-gltf-classes.
// DO NOT EDIT THIS FILE!
#include "NodeJsonHandler.h"
#include "CesiumGltf/Node.h"
#include <cassert>
#include <string>

using namespace CesiumGltf;

void NodeJsonHandler::reset(JsonHandler* pParent, Node* pObject) {
  NamedObjectJsonHandler::reset(pParent);
  this->_pObject = pObject;
}

JsonHandler* NodeJsonHandler::Key(const char* str, size_t /*length*/, bool /*copy*/) {
  using namespace std::string_literals;

  assert(this->_pObject);

  if ("camera"s == str) return property(this->_camera, this->_pObject->camera);
  if ("children"s == str) return property(this->_children, this->_pObject->children);
  if ("skin"s == str) return property(this->_skin, this->_pObject->skin);
  if ("matrix"s == str) return property(this->_matrix, this->_pObject->matrix);
  if ("mesh"s == str) return property(this->_mesh, this->_pObject->mesh);
  if ("rotation"s == str) return property(this->_rotation, this->_pObject->rotation);
  if ("scale"s == str) return property(this->_scale, this->_pObject->scale);
  if ("translation"s == str) return property(this->_translation, this->_pObject->translation);
  if ("weights"s == str) return property(this->_weights, this->_pObject->weights);

  return this->NamedObjectKey(str, *this->_pObject);
}
