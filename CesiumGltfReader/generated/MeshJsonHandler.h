// This file was generated by generate-gltf-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include "ArrayJsonHandler.h"
#include "DoubleJsonHandler.h"
#include "MeshPrimitiveJsonHandler.h"
#include "NamedObjectJsonHandler.h"
#include <CesiumGltf/Reader.h>

namespace CesiumGltf {
struct Mesh;

class MeshJsonHandler : public NamedObjectJsonHandler {
public:
  MeshJsonHandler(ReadModelOptions options) noexcept;
  void reset(IJsonHandler* pHandler, Mesh* pObject);
  Mesh* getObject();
  virtual void reportWarning(
      const std::string& warning,
      std::vector<std::string>&& context = std::vector<std::string>()) override;

  virtual IJsonHandler* Key(const char* str, size_t length, bool copy) override;

protected:
  IJsonHandler* MeshKey(const char* str, Mesh& o);

private:
  Mesh* _pObject = nullptr;
  ArrayJsonHandler<MeshPrimitive, MeshPrimitiveJsonHandler> _primitives;
  ArrayJsonHandler<double, DoubleJsonHandler> _weights;
};
} // namespace CesiumGltf
